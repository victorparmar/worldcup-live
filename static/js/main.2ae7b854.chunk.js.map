{"version":3,"sources":["services/EventService.js","services/SfgFixtureService.js","services/NotificationService.js","services/AppService.js","components/Navbar.js","components/Footer.js","components/InPlay.js","App.js","index.js"],"names":["EventNames","EventService","callbacks","onDataUpdate","onRefreshDataRequestInProgress","onRefreshDataRequestDone","triggerEvent","eventName","data","this","Object","keys","forEach","id","listenEvent","callback","unlistenEvent","chance","Chance","SfgFixtureService","fetchFixtures","fetch","method","then","response","json","fetchFixturesTest","console","log","moment","format","result","JSON","parse","stringify","SampleMatches","bool","filter","fixture","status","Promise","resolve","setTimeout","getMatchesInPlay","fixtures","filterFixtures","getMatchesFinished","getMatchesUpcoming","getNextMatches","upcomingMatches","sorted","sort","a","b","aTime","date","unix","bTime","length","nextDate","match","getSimpleFixture","fifa_id","datetime","home","home_team","country","homeScore","goals","away","away_team","awayScore","time","statuses","map","NotificationService","notify","text","window","Notification","permission","requestPermission","alert","Store","matchesInPlay","AppService","refreshIntervalInPlayId","refreshIntervalInPlay","refreshIntervalId","refreshInterval","refreshTimeoutId","env","refreshData","hasChanged","getLiveNotificationText","matchesFinished","matchesUpcoming","nextMatches","error","updateRefreshInterval","init","clearTimeout","getCurrentRefreshInterval","prev","next","Navbar","intervalId","state","isNavbarActive","isRefreshingData","timeToNextRefresh","handleNavbarMenuClick","e","preventDefault","setState","handleToggleInPlayClick","props","toggleInPlay","handleRefreshDataClick","handleRefreshDataInProgress","handleRefreshDataDone","setInterval","prevState","className","data-target","onClick","href","React","Component","Footer","version","InPlay","renderWithTime","renderWithoutTime","NextMatch","local","FinishedMatch","App","newState","handleOnDataUpdate","ref","elem","appElem","renderInPlay","renderNextUp","packageJson","renderFinished","key","fontawesome","library","add","faUser","faCircle","faUserCircle","faTimes","faAngleDown","faFacebook","faGithub","faCircleNotch","faTrophy","urlParams","URLSearchParams","location","search","has","get","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2ae7b854.chunk.js","sourcesContent":["/**\n * Stupid simple redux implementation without a global store\n */\n\nexport const EventNames = {\n  ON_DATA_UPDATE: \"onDataUpdate\",\n  ON_REFRESH_DATA_REQUEST_IN_PROGRESS: \"onRefreshDataRequestInProgress\",\n  ON_REFRESH_DATA_REQUEST_DONE: \"onRefreshDataRequestDone\",\n  ON_REFRESH_DATA_REQUEST_FAILED: \"onRefreshDataRequestFailed\"\n};\n\nconst EventService = {\n  callbacks: {\n    onDataUpdate: {},\n    onRefreshDataRequestInProgress: {},\n    onRefreshDataRequestDone: {}\n  },\n  /**\n   * @param {string} eventName\n   * @param {*} data\n   */\n  triggerEvent(eventName, data = null) {\n    if (this.callbacks[eventName]) {\n      Object.keys(this.callbacks[eventName]).forEach(id => {\n        this.callbacks[eventName][id](data);\n      });\n    }\n  },\n\n  /**\n   * @param {string} eventName name of event\n   * @param {string} id callback identifier\n   * @param {Function} callback\n   */\n  listenEvent(eventName, id, callback) {\n    this.callbacks[eventName][id] = callback;\n  },\n\n  /**\n   * @param {string} eventName name of event\n   * @param {string} id callback identifier\n   */\n  unlistenEvent(eventName, id) {\n    delete this.callbacks[eventName][id];\n  }\n};\n\nexport default EventService;\n","import fetch from \"isomorphic-fetch\";\nimport moment from \"moment\";\nimport Chance from \"chance\";\nimport SampleMatches from \"./sample-matches.json\";\n\nconst chance = new Chance();\n\nconst SfgFixtureService = {\n  fetchFixtures: () => {\n    return fetch(\"https://world-cup-json.herokuapp.com/matches\", {\n      method: \"GET\"\n    }).then(response => {\n      return response.json();\n    });\n  },\n  fetchFixturesTest: () => {\n    console.log(\"fetchFixturesTest\", moment().format(\"HH:mm:ss\"));\n\n    let result = JSON.parse(JSON.stringify(SampleMatches));\n\n    if (chance.bool()) {\n      result = result.filter(fixture => {\n        return fixture.status !== \"in progress\";\n      });\n    }\n\n    return new Promise(function(resolve) {\n      setTimeout(function() {\n        resolve(result);\n      }, 1000);\n    });\n  },\n  getMatchesInPlay: fixtures => {\n    return filterFixtures(fixtures, [\"in progress\", \"pending_correction\"]);\n  },\n  getMatchesFinished: fixtures => {\n    return filterFixtures(fixtures, [\"completed\"]);\n  },\n  getMatchesUpcoming: fixtures => {\n    return filterFixtures(fixtures, [\"future\"]);\n  },\n  getNextMatches: upcomingMatches => {\n    const sorted = upcomingMatches.sort((a, b) => {\n      const aTime = moment(a.date).unix();\n      const bTime = moment(b.date).unix();\n\n      if (aTime < bTime) {\n        return -1;\n      }\n\n      if (aTime > bTime) {\n        return 1;\n      }\n\n      return 0;\n    });\n\n    if (sorted.length) {\n      const nextDate = moment(sorted[0].date);\n\n      return sorted.filter(match => {\n        const date = moment(match.date);\n        return nextDate.format(\"YYYY-MM-DD\") === date.format(\"YYYY-MM-DD\");\n      });\n    }\n\n    return [];\n  }\n};\n\nconst getSimpleFixture = fixture => {\n  return {\n    id: fixture.fifa_id,\n    date: fixture.datetime,\n    home: fixture.home_team.country,\n    homeScore: fixture.home_team.goals,\n    away: fixture.away_team.country,\n    awayScore: fixture.away_team.goals,\n    time: fixture.time\n  };\n};\n\nconst filterFixtures = (fixtures, statuses) => {\n  return fixtures\n    .filter(fixture => {\n      for (const status of statuses) {\n        if (fixture.status === status) {\n          return true;\n        }  \n      }\n      return false;\n    })\n    .map(getSimpleFixture);\n};\n\nexport default SfgFixtureService;\n","const NotificationService = {\n  notify: text => {\n    if (!(\"Notification\" in window)) {\n      alert(\"This browser does not support desktop notification\");\n    } else if (Notification.permission === \"granted\") {\n      // eslint-disable-next-line no-unused-vars\n      const notification = new Notification(text);\n    } else if (Notification.permission !== \"denied\") {\n      Notification.requestPermission(function(permission) {\n        if (permission === \"granted\") {\n          // eslint-disable-next-line no-unused-vars\n          const notification = new Notification(text);\n        }\n      });\n    }\n\n    // permission denied ...\n  }\n};\n\nexport default NotificationService;\n","import SfgFixtureService from \"./SfgFixtureService\";\nimport EventService, { EventNames } from \"./EventService\";\nimport NotificationService from \"./NotificationService\";\n\nconst Store = {\n  fixtures: [],\n  matchesInPlay: []\n};\n\nconst AppService = {\n  refreshIntervalInPlayId: null,\n  refreshIntervalInPlay: 60 * 1000,\n  refreshIntervalId: null,\n  refreshInterval: 5 * 60 * 1000,\n  refreshTimeoutId: null,\n  env: \"prod\",\n  async refreshData() {\n    EventService.triggerEvent(EventNames.ON_REFRESH_DATA_REQUEST_IN_PROGRESS);\n\n    try {\n      let fixtures = null;\n\n      if (this.env === \"prod\") {\n        fixtures = await SfgFixtureService.fetchFixtures();\n      } else {\n        fixtures = await SfgFixtureService.fetchFixturesTest();\n      }\n\n      if (hasChanged(Store.fixtures, fixtures)) {\n        const matchesInPlay = SfgFixtureService.getMatchesInPlay(fixtures);\n\n        if (hasChanged(Store.matchesInPlay, matchesInPlay)) {\n          if (this.env === \"dev\") {\n            console.log(Store.matchesInPlay, matchesInPlay); // TODO: improve logging\n          }\n\n          if (matchesInPlay.length) {\n            NotificationService.notify(getLiveNotificationText(matchesInPlay));\n          } else {\n            // match ended!\n            NotificationService.notify(\"Finished \\n\" + getLiveNotificationText(Store.matchesInPlay));\n          }\n\n          Store.matchesInPlay = JSON.parse(JSON.stringify(matchesInPlay));\n        }\n\n        const matchesFinished = SfgFixtureService.getMatchesFinished(fixtures);\n        const matchesUpcoming = SfgFixtureService.getMatchesUpcoming(fixtures);\n        const nextMatches = SfgFixtureService.getNextMatches(matchesUpcoming);\n\n        EventService.triggerEvent(EventNames.ON_DATA_UPDATE, {\n          matchesInPlay,\n          matchesFinished,\n          matchesUpcoming,\n          nextMatches\n        });\n\n        Store.fixtures = JSON.parse(JSON.stringify(fixtures));\n      }\n    } catch (err) {\n      console.error(err); // TODO: improve logging\n    } finally {\n      EventService.triggerEvent(EventNames.ON_REFRESH_DATA_REQUEST_DONE);\n      this.updateRefreshInterval();\n    }\n  },\n\n  async init(env) {\n    this.env = env;\n\n    if (this.env !== \"prod\") {\n      this.refreshIntervalInPlay = 5 * 1000;\n      this.refreshInterval = 10 * 1000;\n    }\n\n    NotificationService.notify(\"Welcome to World Cup live 2018!\");\n    await this.refreshData();\n  },\n\n  updateRefreshInterval() {\n    if (this.refreshTimeoutId) {\n      clearTimeout(this.refreshTimeoutId);\n    }\n\n    if (Store.matchesInPlay.length) {\n      this.refreshTimeoutId = setTimeout(async () => {\n        await this.refreshData();\n      }, this.refreshIntervalInPlay);\n      console.log(\"Matches in play, next refresh in \" + this.refreshIntervalInPlay / 1000 + \" seconds\");\n    } else {\n      this.refreshTimeoutId = setTimeout(async () => {\n        await this.refreshData();\n      }, this.refreshInterval);\n\n      console.log(\"No matches in play, next refresh in \" + this.refreshInterval / 1000 + \" seconds\");\n    }\n  },\n\n  getCurrentRefreshInterval() {\n    if (Store.matchesInPlay.length) {\n      return this.refreshIntervalInPlay / 1000;\n    }\n    return this.refreshInterval / 1000;\n  }\n\n  /*\n  clearRefreshInterval() {\n    if (this.refreshIntervalId) {\n      clearInterval(this.refreshIntervalId);\n      this.refreshIntervalId = null;\n    }\n  },\n\n  clearRefreshIntervalInPlay() {\n    if (this.refreshIntervalInPlayId) {\n      clearInterval(this.refreshIntervalInPlayId);\n      this.refreshIntervalInPlayId = null;\n    }\n  }\n  */\n};\n\nconst hasChanged = (prev, next) => {\n  // yes I am a dirty, dirty rat...\n  if (JSON.stringify(prev) !== JSON.stringify(next)) {\n    return true;\n  }\n  return false;\n};\n\nconst getLiveNotificationText = matchesInPlay => {\n  let result = \"\";\n\n  for (const match of matchesInPlay) {\n    result += `${match.time} ${match.home} ${match.homeScore} - ${match.away} ${match.awayScore} \\n`;\n  }\n  return result;\n};\n\nexport default AppService;\n","import React from \"react\";\n\nimport EventService, { EventNames } from \"../services/EventService\";\nimport AppService from \"../services/AppService\";\n\nclass Navbar extends React.Component {\n  intervalId = null;\n\n  state = {\n    isNavbarActive: false,\n    isRefreshingData: false,\n    timeToNextRefresh: AppService.getCurrentRefreshInterval()\n  };\n\n  handleNavbarMenuClick = e => {\n    e.preventDefault();\n    this.setState({\n      isNavbarActive: !this.state.isNavbarActive\n    });\n  };\n\n  handleToggleInPlayClick = e => {\n    e.preventDefault();\n    this.props.toggleInPlay();\n  };\n\n  handleRefreshDataClick = async e => {\n    e.preventDefault();\n    await AppService.refreshData();\n  };\n\n  handleRefreshDataInProgress = () => {\n    this.setState({\n      isRefreshingData: true\n    });\n  };\n\n  handleRefreshDataDone = () => {\n    this.setState({\n      isRefreshingData: false,\n      timeToNextRefresh: AppService.getCurrentRefreshInterval()\n    });\n  };\n\n  componentDidMount() {\n    EventService.listenEvent(\n      EventNames.ON_REFRESH_DATA_REQUEST_IN_PROGRESS,\n      \"navbar\",\n      this.handleRefreshDataInProgress\n    );\n    EventService.listenEvent(EventNames.ON_REFRESH_DATA_REQUEST_DONE, \"navbar\", this.handleRefreshDataDone);\n\n    this.intervalId = setInterval(() => {\n      this.setState((prevState, props) => {\n        return {\n          timeToNextRefresh: prevState.timeToNextRefresh - 1\n        };\n      });\n    }, 1000);\n  }\n\n  componentWillUnmount() {\n    EventService.unlistenEvent(EventNames.ON_REFRESH_DATA_REQUEST_IN_PROGRESS, \"navbar\");\n    EventService.unlistenEvent(EventNames.ON_REFRESH_DATA_REQUEST_DONE, \"navbar\");\n  }\n\n  render() {\n    return (\n      <nav className=\"navbar\">\n        <div className=\"container\">\n          <div className=\"navbar-brand\">\n            <a className=\"navbar-item\">\n              <span className=\"icon\">\n                <i className=\"fas fa-trophy\" />\n              </span>\n              <span>\n                <b>World Cup Live 2018</b>\n              </span>\n            </a>\n            <span className=\"navbar-burger burger\" data-target=\"navbarMenuHeroB\" onClick={this.handleNavbarMenuClick}>\n              <span />\n              <span />\n              <span />\n            </span>\n          </div>\n          <div id=\"navbarMenuHeroB\" className={\"navbar-menu \" + (this.state.isNavbarActive ? \"is-active\" : \"\")}>\n            <div className=\"navbar-end\">\n              {this.props.env === \"test\" && (\n                <span className=\"navbar-item\">\n                  <a className=\"button is-inverted\" onClick={this.handleToggleInPlayClick}>\n                    <span>Toggle InPlay</span>\n                  </a>\n                </span>\n              )}\n              <span className=\"navbar-item\">\n                <a\n                  className={\"button is-inverted \" + (this.state.isRefreshingData ? \"is-loading\" : \"\")}\n                  onClick={this.handleRefreshDataClick}\n                >\n                  <span>Refresh ({this.state.timeToNextRefresh > 0 ? this.state.timeToNextRefresh : \"soon\"})</span>\n                </a>\n              </span>\n              <span className=\"navbar-item\">\n                <a className=\"button is-inverted\" href=\"https://github.com/victorparmar/worldcup-live\">\n                  <span className=\"icon\">\n                    <i className=\"fab fa-github\" />\n                  </span>\n                  <span>Github</span>\n                </a>\n              </span>\n            </div>\n          </div>\n        </div>\n      </nav>\n    );\n  }\n}\n\nexport default Navbar;\n","import React from \"react\";\n\nimport \"./Footer.css\";\n\nconst Footer = props => {\n  return (\n    <div className=\"container wc-footer\">\n      <div className=\"wc-footer-text\">\n        Made with ❤ by Victor Parmar <br />\n        Version {props.version}\n      </div>\n    </div>\n  );\n};\n\nexport default Footer;\n","import React from \"react\";\n\nclass InPlay extends React.Component {\n  render() {\n    if (this.props.time) {\n      return this.renderWithTime();\n    }\n    return this.renderWithoutTime();\n  }\n\n  renderWithTime() {\n    return (\n      <div className=\"columns is-mobile\">\n        <div className=\"column is-5\">\n          <div className=\"country\">{this.props.home}</div>\n          <div className=\"score\">{this.props.homeScore}</div>\n        </div>\n        <div className=\"column is-2 time-container\">\n          <div className=\"time\">{this.props.time}</div>\n        </div>\n        <div className=\"column is-5\">\n          <div className=\"country\">{this.props.away}</div>\n          <div className=\"score\">{this.props.awayScore}</div>\n        </div>\n      </div>\n    );\n  }\n\n  renderWithoutTime() {\n    return (\n      <div className=\"columns is-mobile\">\n        <div className=\"column\">\n          <div className=\"country\">{this.props.home}</div>\n          <div className=\"score\">{this.props.homeScore}</div>\n        </div>\n        <div className=\"column\">\n          <div className=\"country\">{this.props.away}</div>\n          <div className=\"score\">{this.props.awayScore}</div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default InPlay;\n","import React, { Component } from \"react\";\nimport moment from \"moment\";\nimport \"./App.css\";\n\nimport packageJson from \"./package.json.lnk\";\n\nimport Navbar from \"./components/Navbar\";\nimport Footer from \"./components/Footer\";\nimport InPlay from \"./components/InPlay\";\n\nimport EventService, { EventNames } from \"./services/EventService\";\n\nconst NextMatch = props => {\n  return (\n    <div>\n      <b>{props.match.home}</b> vs <b>{props.match.away}</b> ({moment(props.match.date)\n        .local()\n        .format(\"DD MMM, HH:mm\")})\n    </div>\n  );\n};\n\nconst FinishedMatch = props => {\n  return (\n    <div>\n      <b>\n        {props.match.home} <u>{props.match.homeScore}</u>\n      </b>{\" \"}\n      -{\" \"}\n      <b>\n        {props.match.away} <u>{props.match.awayScore}</u>\n      </b>{\" \"}\n      ({moment(props.match.date)\n        .local()\n        .format(\"DD MMM, HH:mm\")})\n    </div>\n  );\n};\n\nclass App extends Component {\n  state = {\n    matchesInPlay: [],\n    matchesFinished: [],\n    matchesUpcoming: [],\n    nextMatches: []\n  };\n\n  // for testing purposes\n  toggleInPlay = () => {\n    const newState = { ...this.state };\n\n    if (this.state.matchesInPlay.length) {\n      newState.matchesInPlay = [];\n    } else {\n      newState.matchesInPlay = [\n        {\n          id: \"xxx\",\n          home: \"Nigeria\",\n          homeScore: \"0\",\n          away: \"Croatia\",\n          awayScore: \"2\"\n        }\n        /*\n        {\n          id: \"yyy\",\n          home: \"Spain\",\n          homeScore: \"2\",\n          away: \"Germany\",\n          awayScore: \"3\"\n        },\n        */\n      ];\n    }\n\n    this.setState(newState);\n  };\n\n  handleOnDataUpdate = e => {\n    this.setState({\n      matchesInPlay: e.matchesInPlay,\n      matchesFinished: e.matchesFinished,\n      matchesUpcoming: e.matchesUpcoming,\n      nextMatches: e.nextMatches\n    });\n  };\n\n  componentDidMount() {\n    EventService.listenEvent(EventNames.ON_DATA_UPDATE, \"app\", this.handleOnDataUpdate);\n  }\n\n  componentWillUnmount() {\n    EventService.unlistenEvent(EventNames.ON_DATA_UPDATE, \"app\");\n  }\n\n  render() {\n    return (\n      <div ref={elem => (this.appElem = elem)}>\n        <section className={\"hero is-fullheight \" + (this.state.matchesInPlay.length ? \"is-success\" : \"is-info\")}>\n          <div className=\"hero-head\">\n            <Navbar toggleInPlay={this.toggleInPlay} env={this.props.env} />\n          </div>\n\n          <div className=\"hero-body\">\n            <div className=\"container wc-dashboard has-text-centered\">\n              {this.renderInPlay()}\n              {this.renderNextUp()}\n            </div>\n          </div>\n\n          <div className=\"hero-foot\">\n            <Footer version={packageJson.version} />\n          </div>\n        </section>\n      </div>\n    );\n  }\n\n  renderInPlay() {\n    if (this.state.matchesInPlay.length === 0) {\n      return this.renderFinished();\n    }\n\n    return this.state.matchesInPlay.map(match => {\n      return (\n        <div key={match.id}>\n          <InPlay home={match.home} homeScore={match.homeScore} away={match.away} awayScore={match.awayScore} time={match.time} />\n          <hr />\n        </div>\n      );\n    });\n  }\n\n  renderFinished() {\n    if (!this.state.matchesFinished.length) {\n      return;\n    }\n\n    return (\n      <div className=\"columns match-list\">\n        <div className=\"column\">\n          <div className=\"match-deets\">\n            Finished <br />\n            <FinishedMatch match={this.state.matchesFinished[this.state.matchesFinished.length - 1]} />\n            {/*this.state.matchesFinished.map(match => {\n              return <FinishedMatch key={match.id} match={match} />;\n            })*/}\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  renderNextUp() {\n    if (this.state.nextMatches.length === 0) {\n      return;\n    }\n    \n    return (\n      <div className=\"columns match-list\">\n        <div className=\"column\">\n          <div className=\"match-deets\">\n            Next up <br />\n            {this.state.nextMatches.map(match => {\n              return <NextMatch key={match.id} match={match} />;\n            })}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport \"./styles/css/bulma-woldcup-live.css\";\n// import 'font-awesome/css/font-awesome.css';\n\nimport fontawesome from \"@fortawesome/fontawesome\";\nimport faUser from \"@fortawesome/fontawesome-free-solid/faUser\";\nimport faCircle from \"@fortawesome/fontawesome-free-regular/faCircle\";\nimport faUserCircle from \"@fortawesome/fontawesome-free-regular/faUserCircle\";\nimport faAngleDown from \"@fortawesome/fontawesome-free-solid/faAngleDown\";\nimport faTimes from \"@fortawesome/fontawesome-free-solid/faTimes\";\nimport faFacebook from \"@fortawesome/fontawesome-free-brands/faFacebook\";\nimport faGithub from \"@fortawesome/fontawesome-free-brands/faGithub\";\nimport faCircleNotch from \"@fortawesome/fontawesome-free-solid/faCircleNotch\";\nimport faTrophy from \"@fortawesome/fontawesome-free-solid/faTrophy\";\n\nimport AppService from \"./services/AppService\";\n\nimport packageJson from \"./package.json.lnk\";\n\nfontawesome.library.add(faUser);\nfontawesome.library.add(faCircle);\nfontawesome.library.add(faUserCircle);\nfontawesome.library.add(faTimes);\nfontawesome.library.add(faAngleDown);\nfontawesome.library.add(faFacebook);\nfontawesome.library.add(faGithub);\nfontawesome.library.add(faCircleNotch);\nfontawesome.library.add(faTrophy);\n\n// import registerServiceWorker from './registerServiceWorker';\n\nconst urlParams = new URLSearchParams(window.location.search);\nconst env = urlParams.has(\"env\") ? urlParams.get(\"env\") : \"prod\";\n\nReactDOM.render(<App env={env} />, document.getElementById(\"root\"));\n// registerServiceWorker();\n\nAppService.init(env).then(() => {\n  console.log(\"init \" + env);\n  console.log(packageJson.version);\n});\n\n"],"sourceRoot":""}